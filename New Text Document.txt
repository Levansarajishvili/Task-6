
3 და 6 პირდაპირ ილოგება. არც ერთს არ ელოდება;
2 არის ფრომისი, რაც ნიშნავს იმას რომ მიკრო თასქია და პირდაპირ ეშვება. სხვებთან პრიორიტეტი ეძლევა.
5 ფუნქციაში გვაქვს ფრომისი. ეს ნიშნავს რომ გადადის მიკრო თასქებში. შემდეგ კითხულობს რიზოლვია თუ უარყოფა. ამის შემდეგ უკვე ეშვება stack-ში.
1 setTimeout() არის მაკრო თასქი. ამზადებს ფუნქციას და მიკრო თასქები რომ გაეშვება, შემდეგ ნული დაყოვნების შემდეგ გაეშვება.
4 გადადის მიკრო თასქებში. შესრულდება ფრომისი. შემდეგ გადავა მაკროთასქებში და ბოლოს ეშვება.

Result:

Sync function
console.log("3");
console.log("6");

Micro task
Promise.resolve().then(() => console.log("2"));
logIt().then(() => console.log("5"));

Macro task
setTimeout(() => console.log("1"), 0);
logIt2().then(() => console.log("4"));

Output: 3, 6, 2, 5, 1, 4. 